#!/usr/bin/lua
-- Verifies that all l10n keys from l_english exist in the other languages.

local lfs = require("lfs")
-- Code by David Kastrup
-- from http://lua-users.org/wiki/DirTreeIterator
local function yieldtree(folder)
	for entry in lfs.dir(folder) do
		if entry ~= "." and entry ~= ".." then
			entry = folder.."/"..entry
			local attr = lfs.attributes(entry)
			coroutine.yield(entry,attr)
			if attr.mode == "directory" then
				yieldtree(entry)
			end
		end
	end
end
local function dirtree(dir)
	if string.sub(dir, -1) == "/" then dir = string.sub(dir, 1, -2) end
	return coroutine.wrap(function() yieldtree(dir) end)
end

local verify = {}
for file, attr in dirtree(".") do
	if attr.mode == "file" then
		local name, ext = file:match(".-([^\\/]-)%.?([^%.\\/]*)$")
		if ext then ext = ext:lower() end
		if ext == "yml" then
			local n, l = name:match("^(.*)_(l_[%w_]+)$")
			if not verify[n] then verify[n] = {} end
			verify[n][l] = file
		end
	end
end

local languages = {
	["l_english"] = true,
	["l_braz_por"] = true,
	["l_german"] = true,
	["l_french"] = true,
	["l_spanish"] = true,
	["l_russian"] = true,
	["l_polish"] = true,
	--["l_trad_chinese"] = true,
}

local function buildKeys(file)
	local f = io.open(file, "r")
	local content = f:read("*a"); f:close()
	local keys = {}
	for key, value in content:gmatch("([%w%_%.]+):%d?%s?([^\n]+)") do
		if not languages[key] then keys[key] = value end
	end
	return keys
end

local fmt = "%s: %s"
local function validate(srcName, keys, target)
	local f = io.open(target, "r")
	local content = f:read("*a"); f:close()
	local header = false
	for key, value in pairs(keys) do
		if not content:find(key .. ":") then
			if not header then print("FAILED VALIDATION", srcName, target); header = true end
			print(fmt:format(key, value))
		end
	end
end

for source, langs in pairs(verify) do
	if langs.l_english then
		local map = buildKeys(langs.l_english)
		for lang, file in pairs(langs) do
			if lang ~= "english" then
				validate(source, map, file)
			end
		end
	end
	for lang in pairs(languages) do
		if not langs[lang] then
			print(source .. " seems to be missing a language file for " .. lang)
		end
	end
end

